import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.preprocessing import MinMaxScaler
from keras.models import Sequential
from keras.layers import LSTM, Dense


symbol = 'AAPL'  # change to MSFT or TSLA as needed
df = pd.read_csv(f'../data/{symbol}_stock_data.csv')
print(df.head())


scaler = MinMaxScaler()
scaled_close = scaler.fit_transform(df['Close'].values.reshape(-1,1))


sequence_length = 3
X, y = [], []
for i in range(len(scaled_close)-sequence_length):
    X.append(scaled_close[i:i+sequence_length])
    y.append(scaled_close[i+sequence_length])
X, y = np.array(X), np.array(y)


model = Sequential()
model.add(LSTM(50, return_sequences=True, input_shape=(X.shape[1], 1)))
model.add(LSTM(50))
model.add(Dense(1))
model.compile(optimizer='adam', loss='mse')


model.fit(X, y, epochs=5, batch_size=1)
model.save(f'../models/lstm_model_weights_{symbol}.h5')

s
predicted = model.predict(X)
predicted_prices = scaler.inverse_transform(predicted)
actual_prices = scaler.inverse_transform(y)
plt.plot(actual_prices, label='Actual')
plt.plot(predicted_prices, label='Predicted')
plt.title(f'{symbol} Predictions vs Actual')
plt.legend()
plt.savefig(f'../graphs/{symbol}_predictions_vs_actual.png')
plt.show()
